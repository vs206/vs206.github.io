[{"content":"This is a practical guide for git, and it is mainly aimed towards the ones who have no idea on what and how to use git. If you know someone who does not know how to use git, share them this article.\nWhat is Git? Git is a fast, scalable, distributed version control system with an unusually rich command set that provides both high-level operations and full access to internals.\nWhich means it is a version control system, that tracks the changes that are made on a file/files.\nHow to install Git? Windows installing git for windows link\nMac brew install git Ubuntu/Debian sudo apt-get install git Arch sudo pacman -S git OpenSuse sudo zypper install git How to configure Git? When you first install git you need to add your username and email.\nFor adding your username\ngit config --global user.name \u0026#34;username\u0026#34; For adding your email\ngit config --global user.email \u0026#34;email\u0026#34; Basic Commands For Git git add The git add command is used to add files to git, so that the git can track. When you add files through the git add command they get staged. You can think it as an intermediate stage between the start and the end of something. Syntax :- # For adding one file $ git add (filename) # Adding multiple files $ git add (filename1) (filename2) # For adding all the files in a folder $ git add * git commit Now you have staged and added your files with git add for finalising it you need to run the command git commit command. It must be followed by a -m tag, and you must type message in quotes, stating your commit (what are you committing) you can also type garbage, but it defeats the purpose of the -m tag. # Commiting a file $ git commit -m \u0026#34;Commit Message\u0026#34; # Example 2 $ git commit -m \u0026#34;Refactored the code\u0026#34; Git pull the git pull command downloads all the files present in the repository. It\u0026rsquo;s advised to do a git pull before a push, as it can reduce merge conflicts. Imagine you and your friend are working a project (creating a website). You are working on the CSS whereas your friend is working on HTML. When have completed your part and planning to push to code to the repository, your friend have already made some changes to the files. But these changes are not present in your system, hence for downloading the changes made by your friend you need to do a git pull. # Git pull command $ git pull Git push The git push command sends the changes and new files to the repository. Now if you are asking what is repository, consider as a online folder where all your colleagues contribute their work. # Git push command $ git push Git status The git status command shows your tracked, untracked, which files differ from the working tree. # git status command $ git status When you do a git push, git will ask for your credentials. There are a few ways in which you can authenticate it, my preferred way is to use SSH keys. I will be releasing a new article based on this, so do follow me.\nComments I don\u0026rsquo;t have comments as I don\u0026rsquo;t want to manage them. You can however contact me at the below address if you want to.\nEmail singhvikal891@gmail.com License The contents of this site is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n=\u0026gt; Return to Homepage\n","permalink":"https://vikalsingh.pages.dev/blog/guidetogit/","summary":"This is a practical guide for git, and it is mainly aimed towards the ones who have no idea on what and how to use git. If you know someone who does not know how to use git, share them this article.\nWhat is Git? Git is a fast, scalable, distributed version control system with an unusually rich command set that provides both high-level operations and full access to internals.","title":"Guide To Git"},{"content":"Pandoc is a great tool for converting a file in one markup format into another. This means we can use it to convert a file written in Markdown into an EPUB file that is supported by many e-readers.\nLets start by writting a very simple markdown file called example_ebook.md.\n--- title: - type: main text: Example Ebook - type: subtitle text: An Ebook created from a Markdown file creator: - role: author text: David Sadler publisher: Published by myself --- This is an introduction. # Chapter 1 This is the first paragraph of chapter 1. This is the second paragraph of chapter 1. Below is a list. - Item One - Item Two - Item Three # Chapter 2 This is the first paragraph of chapter 2. This is the second paragraph of chapter 2. # Chapter 3 This is the first paragraph of chapter 3. This is the second paragraph of chapter 3. Note that the file begins with a YAML metadata block that starts and ends with three hyphens (\u0026mdash;). This allows you to specify EPUB metadata such as the title and author.\nConverting this to EPUB is done by running pandoc.\n$ pandoc example_ebook.md -t epub3 --toc -o example_ebook.epub There are several options that need to be passed to pandoc.\nexample_ebook.md - This argument is the file that you are converting. also -t epub3 - Set the output format to be EPUB v3 book. and \u0026ndash;toc - Include a table of contents in the output document. This will be derived from the H1 headers in the markdown. this -o example_ebook.epub - Tell pandoc to output the conversion to the named file instead of stdout. You can now copy the file example_ebook.epub to any device that supports the format or use one of the many software readers such as Calibre. However, if you wish to read this on a Kindle device you will need to convert it to the Mobi format.\nAmazon provides a command line tool called KindleGen that can convert our EPUB file into the Mobi format. After downloading the tool just run it as shown below.\n$ kindlegen example_ebook.epub This will create a file called example_ebook.mobi that you can copy to your Kindle to read.\nComments I don\u0026rsquo;t have comments as I don\u0026rsquo;t want to manage them. You can however contact me at the below address if you want to.\nEmail singhvikal891@gmail.com License The contents of this site is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n=\u0026gt; Return to Homepage\n","permalink":"https://vikalsingh.pages.dev/blog/ebookwithmarkdown/","summary":"Pandoc is a great tool for converting a file in one markup format into another. This means we can use it to convert a file written in Markdown into an EPUB file that is supported by many e-readers.\nLets start by writting a very simple markdown file called example_ebook.md.\n--- title: - type: main text: Example Ebook - type: subtitle text: An Ebook created from a Markdown file creator: - role: author text: David Sadler publisher: Published by myself --- This is an introduction.","title":"Ebook with Markdown"},{"content":"Installing Docker Docker is installed via package manager.\nArch Linux $ sudo pacman -S docker Debian/Ubuntu Linux $ sudo apt-get install docker.io Starting Docker Engine Start the Docker daemon which provides the Docker Engine. This process serves the Docker API and manages Docker containers.\n$ sudo systemctl start docker.service If you want Docker Engine to automatically start when you system boots issue the below command.\n$ sudo systemctl enable docker.service Verify that Docker Engine is running.\n$ docker info Verify that you can run containers. The below will download the latest Arch Linux image and use it to run a \u0026ldquo;Hello World\u0026rdquo; bash script in the container.\n$ docker run -it --rm archlinux bash Links I don\u0026rsquo;t have comments as I don\u0026rsquo;t want to manage them. You can however contact me at the below address if you want to.\nEmail singhvikal891@gmail.com License The contents of this site is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n=\u0026gt; Return to Homepage\n","permalink":"https://vikalsingh.pages.dev/blog/dockersetup/","summary":"Installing Docker Docker is installed via package manager.\nArch Linux $ sudo pacman -S docker Debian/Ubuntu Linux $ sudo apt-get install docker.io Starting Docker Engine Start the Docker daemon which provides the Docker Engine. This process serves the Docker API and manages Docker containers.\n$ sudo systemctl start docker.service If you want Docker Engine to automatically start when you system boots issue the below command.\n$ sudo systemctl enable docker.service Verify that Docker Engine is running.","title":"Docker Installation"},{"content":"TikTok has changed the world views on videos drastically in the recent years. From full-length 30min videos to 30s short video, people want to entertain themselves with just an infinite scroll of videos. People getting addicted to short videos.\nThe massive success of TikTok just brought in more like it, YouTube Shorts, Instagram Reels and much more.\nDue to the infinite scroll of media that is relevant to your liking, I often find myself losing track of time and spending hours mindlessly swiping through the videos. This takes a total hit on my productivity. The recommendation system is so good to keep you in the scroll with more and more fresh content if you keep scrolling for hours, even when you know you should be doing something else. Also If i used instgram for 1 hour then i feel like I am tired from walking 3-4 km. Which at last make me less productive, or my day go complete waste.\nWhat might seem like an entertaining and relaxing thing could make you less productive and after that you will feel that you wasted the day completely, and you fell guilty.\nSimple steps you can take to cut this down:\nUninstall Instagram app, the website works as equally good on mobile, and there are far less chances you will be hooking yourself to reels on it.\nUninstall/Disable YouTube app, there is plently of alternative frontends on mobile (eg: NewPipe/LibreTube) to hold your basic YT needs.\nI had been on a loop of spending a lot of hours on short media, and these are some small steps that did help me cut it down.\nLinks I don\u0026rsquo;t have comments as I don\u0026rsquo;t want to manage them. You can however contact me at the below address if you want to.\nEmail singhvikal891@gmail.com License The contents of this site is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n=\u0026gt; Return to Homepage\n","permalink":"https://vikalsingh.pages.dev/blog/socialmedia/","summary":"TikTok has changed the world views on videos drastically in the recent years. From full-length 30min videos to 30s short video, people want to entertain themselves with just an infinite scroll of videos. People getting addicted to short videos.\nThe massive success of TikTok just brought in more like it, YouTube Shorts, Instagram Reels and much more.\nDue to the infinite scroll of media that is relevant to your liking, I often find myself losing track of time and spending hours mindlessly swiping through the videos.","title":"Dark Side of Social Media"},{"content":"Installing ST, DMENU and DWM Introduction So Let\u0026rsquo;s Start, we will be require to install two things. A window system of some sort and a layout manager. For this installation I\u0026rsquo;m going with Xorg and dwm. For those that are not aware dwm is dynamic window manager for Xorg that has been developed by Suckless. Since by default dwm expects st to be installed as the system\u0026rsquo;s terminal and also makes use dmenu using which we launch applications I will installed both of them in addition to dwm.\nInstall Dependencies Firt off We need to install the dependencies required by st, dmenu and dwm.\n$ sudo pacman -S base-devel git libx11 libxft xorg-server xorg-xinit libxinerama terminus-font base-devel Since I will be installing from source this package contains various tools to compile software. git Is needed to get the source code from the suckless git repositories. libx11, libxinerama and libxft Dependanices required by dwm otherwise it will fail when trying to compile it. xorg-server Is the display server that provides the windows that dwm will manage. xorg-xinit Allows us to start the display server. terminus-font Dwm is configured to use a monospaced font and since I installed a barebones system I need to install such a font now. $ sudo at install build-essential git libx11-dev libxft-dev xorg libxinerama-dev build-essential Since I will be installing from source this package contains various tools to compile software. git Is needed to get the source code from the suckless git repositories. libx11-dev, libxinerama-dev and libxft-dev Dependanices required by dwm otherwise it will fail when trying to compile it. xorg Is the display server that provides the windows that dwm will manage. xorg-xinit Allows us to start the display server. it is merged in xorg Download Git Repositories The source code for the software is avialable from the Suckless git repositories so I simply clone them.\n$ mkdir suckless $ cd suckless/ $ git clone git://git.suckless.org/st $ git clone git://git.suckless.org/dmenu $ git clone git://git.suckless.org/dwm Install ST I install st by first moving to the directory created when cloning the repository.\n$ cd st Compile and install as usual.\n$ make clean $ sudo make install Install DMENU $ cd dmenu Again compiling and installing is done with the below commands.\n$ make clean $ sudo make install Install DWM $ cd dwm/ Compile and install as usual.\n$ make clean $ sudo make install Starting DWM Since we have installed xorg-xinit I need to create a .xinitrc in my home folder. I am using Neovim Editor, You can use any You Like.\n$ nvim ~/.xinitrc The contents of this file is just.\nexec dwm I can now start xorg and dwm with the below command.\n$ startx Now, We have got our basic minimal dwm setup.\nNote : If you don\u0026rsquo;t want any mess and don\u0026rsquo;t have time you can directly go to my GitHub and use the script to install the beautiful Customised dwm with dmenu,st, and other stuff directly with a single command.\nSteps to Install My Configaration $ mkdir suckless $ cd suckless/ $ git clone https://github.com/singh-vikal/harbs $ cd harbs/ $ sudo chmod +x install.sh $ ./install.sh Now Sit Back and Relax. You just have to select Yes at some places and this script will give you a beautiful Dwm setup with dmenu, st, alacritty, slstatus, Brave browser, mpv, audio setup and other daily required packages.\nLinks Dynamic Window Manager (DWM) Suckless Simple Terminal DMenu I don\u0026rsquo;t have comments as I don\u0026rsquo;t want to manage them. You can however contact me at the below address if you want to.\nEmail singhvikal891@gmail.com License The contents of this site is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\nCredit: Harsh/Sei Me =\u0026gt; Return to Homepage\n","permalink":"https://vikalsingh.pages.dev/blog/dwmsetup/","summary":"Installing ST, DMENU and DWM Introduction So Let\u0026rsquo;s Start, we will be require to install two things. A window system of some sort and a layout manager. For this installation I\u0026rsquo;m going with Xorg and dwm. For those that are not aware dwm is dynamic window manager for Xorg that has been developed by Suckless. Since by default dwm expects st to be installed as the system\u0026rsquo;s terminal and also makes use dmenu using which we launch applications I will installed both of them in addition to dwm.","title":" DWM Setup"},{"content":"Installing ST, DMENU, and BSPWM Introduction So Let\u0026rsquo;s Start, we will be installing two things. A window system and a layout manager. For this installation I\u0026rsquo;m using Xorg and bspwm. For those who don\u0026rsquo;t know bspwm is tiling window manager for Xorg . we will install st to be our default terminal and also make use of dmenu for launching applications, I will installed both of them in addition to bspwm.\nInstall Dependencies Firt Let\u0026rsquo;s install the dependencies required by st, dmenu and bspwm and other stuff.\n$ sudo pacman -S base-devel git libx11 libxft xorg-server xorg-xinit libxinerama terminus-font bspwm sxhkd nitrogen picom polybar base-devel Since I will be installing from source this package contains various tools to compile software. git Is needed to get the source code from the suckless git repositories. libx11, libxinerama and libxft Dependanices required by dwm otherwise it will fail when trying to compile it. xorg-server Is the display server that provides the windows that dwm will manage. xorg-xinit Allows us to start the display server. terminus-font Dwm is configured to use a monospaced font and since I installed a barebones system I need to install such a font now. polybar is very customisable bar nitrogen is for wallpaper picom is compositor alacritty is GPU accelerated terminal Install Yay - AUR helper, you can use others too, but I like yay.\nyay -Syyu alacritty $ sudo at install build-essential bspwm sxhkd git libx11-dev libxft-dev xorg libxinerama-dev nitrogen picom polybar build-essential Since I will be installing from source this package contains various tools to compile software. git Is needed to get the source code from the suckless git repositories. libx11-dev, libxinerama-dev and libxft-dev Dependanices required by dwm otherwise it will fail when trying to compile it. xorg Is the display server that provides the windows that dwm will manage. xinit Allows us to start the display server. it is merged in xorg polybar is very customisable bar nitrogen is for wallpaper picom is compositor alacritty is GPU accelerated terminal, alacritty is nor available in ubuntu repo, so on Ubuntu we have to build it using cargo Download Git Repositories I am not installing DMenu, ST from repository, We will build it from source because it offers more control and customisation when compiling from source.\nSo, let\u0026rsquo;s Start cloning Repos.\n$ mkdir suckless $ cd suckless/ $ git clone git://git.suckless.org/st $ git clone git://git.suckless.org/dmenu Install ST I install st by first moving to the directory created when cloning the repository.\n$ cd st Compile and install as usual.\n$ make clean $ sudo make install Install DMENU $ cd dmenu Again compiling and installing is done with the below commands.\n$ make clean $ sudo make install Setup Bspwm, Sxhkd We have installed BSPWM, and SXHKD, but now we will copy the configuration, because its empty by default.\n$ cd ~/.config/ \u0026amp;\u0026amp; mkdir -p bspwm sxhkd $ cp /usr/share/doc/bspwm/examples/bspwmrc ~/.config/bspwm/ $ cp /usr/share/doc/bspwm/examples/sxhkdrc ~/.config/sxhkd/ $ chmod u+x ~/.config/bspwm/bspwmrc Keybindings: sxhkdrc Check the config file, learn/modify the keybindings to your liking:\n$ nvim ~/.config/sxhkd/sxhkdrc Basic shortcuts (not all default): This is my config of SXHKD, You can copy paste it to the sxhkdrc file and then customize it as you like.\n# wm independent hotkeys # terminal emulator super + Return st # program launcher super + d dmenu_run #its configuration files: super + Escape pkill -USR1 -x sxhkd # bspwm hotkeys # quit/restart bspwm super + alt + {w,r} bspc {quit,wm -r} # close and kill super + {_,shift + }q bspc node -{c,k} # alternate between the tiled and monocle layout super + m bspc desktop -l next # send the newest marked node to the newest preselected node super + y bspc node newest.marked.local -n newest.!automatic.local # swap the current node and the biggest window super + g bspc node -s biggest.window # # state/flags # # set the window state super + {t,shift + t,s,f} bspc node -t {tiled,pseudo_tiled,floating,fullscreen} # set the node flags super + ctrl + {m,x,y,z} bspc node -g {marked,locked,sticky,private} # # focus/swap # focus the node in the given direction super + {_,shift + }{h,j,k,l} bspc node -{f,s} {west,south,north,east} # focus the node for the given path jump super + {p,b,comma,period} bspc node -f @{parent,brother,first,second} # focus the next/previous window in the current desktop super + {_,shift + }c bspc node -f {next,prev}.local.!hidden.window # focus the next/previous desktop in the current monitor super + bracket{left,right} bspc desktop -f {prev,next}.local # focus the last node/desktop super + {grave,Tab} bspc {node,desktop} -f last # focus the older or newer node in the focus history super + {o,i} bspc wm -h off; \\ bspc node {older,newer} -f; \\ bspc wm -h on # focus or send to the given desktop super + {_,shift + }{1-9,0} bspc {desktop -f,node -d} \u0026#39;^{1-9,10}\u0026#39; # # preselect # preselect the direction super + ctrl + {h,j,k,l} bspc node -p {west,south,north,east} # preselect the ratio super + ctrl + {1-9} bspc node -o 0.{1-9} # cancel the preselection for the focused node super + ctrl + space bspc node -p cancel # cancel the preselection for the focused desktop super + ctrl + shift + space bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel # # move/resize # # expand a window by moving one of its side outward super + alt + {h,j,k,l} bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0} # contract a window by moving one of its side inward super + alt + shift + {h,j,k,l} bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0} # move a floating window super + {Left,Down,Up,Right} bspc node -v {-20 0,0 20,0 -20,20 0} Config file: bspwmrc Check the config file:\n$ vim ~/.config/bspwm/bspwmrc Declare the apps to autostart when launching a session:\nmake sure sxhkdrc is launched at start:\npgrep -x sxhkd \u0026gt; /dev/null || sxhkd \u0026amp; compositing manager:\npicom \u0026amp; bar (here polybar, throught a script):\npolybar \u0026amp; wallpaper:\nnitrogen --restore \u0026amp; Bar: polybar Now for polybar, Using the default config is easy and understandable, so i would suggest you to do that. But if you are comfortable with customising it then you can do it easily. Here i am using default polybar config.\n$ mkdir ~/.config/polybar $ cp /etc/polybar/config.ini ~/.config/polybar/ $ vim ~/.config/polybar/config Starting Bspwm Since we have installed xorg-xinit I need to create a .xinitrc in my home folder. I am using Neovim Editor, You can use any You Like.\n$ nvim ~/.xinitrc The contents of this file is just.\nexec bspwm I can now start xorg and dwm with the below command.\n$ startx Now, We have got our basic minimal dwm setup.\nNote : If you don\u0026rsquo;t want any mess and don\u0026rsquo;t have time you can directly go to my GitHub and install the beautiful Customised bspwm with dmenu,st, polybar and other stuff directly.\nSteps to Install My Configaration $ git clone https://github.com/vikmenace/dotfiles #copy the files to .config folder in home Copy All the files from DOTS folder to .config folder. Now Sit Back and Relax. Set the wallpaper using nitrogen or xwallpaper. Reboot or Login Back to bspwm and you got you beautiful customised bspwm with everything you need in it.\nIt Will look similar to image on the top of this article.\nLinks Bspwm Polybar Simple Terminal DMenu I don\u0026rsquo;t have comments as I don\u0026rsquo;t want to manage them. You can however contact me at the below address if you want to.\nEmail singhvikal891@gmail.com License The contents of this site is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n=\u0026gt; Return to Homepage\n","permalink":"https://vikalsingh.pages.dev/blog/bspwmsetup/","summary":"Installing ST, DMENU, and BSPWM Introduction So Let\u0026rsquo;s Start, we will be installing two things. A window system and a layout manager. For this installation I\u0026rsquo;m using Xorg and bspwm. For those who don\u0026rsquo;t know bspwm is tiling window manager for Xorg . we will install st to be our default terminal and also make use of dmenu for launching applications, I will installed both of them in addition to bspwm.","title":"BSPWM Setup"},{"content":"So this is About Stuff/Resources I use.\nSystem I have 2 Laptops:\nOne is old like from 2014. Its a Lenovo IdeaPad G500 series laptop. My linux testing and Other things which I want to try. And You can say like Server stuff, storing Data are done on this laptop. I upgraded it with a 240gb SATA SSD AND it has 8GB Ram. But a Old Dual core processor which is not good for today\u0026rsquo;s world. But still it works to do basic tasks.\nMy Main machine is HP one with Ryzen 5500 series processor and 8GB Ram this is DDR4. On which i have Debian With the BSPWM. Setup of BSPWM I posted in the Blog Section. I tried Many Operating System but Debian suits me and full fill my needs. Also Debian I use is not Debian Stable. I use Rolling Debian, which is also called as Debian Sid or unstable.\nI tried many Window Manager like i3, bspwm, dwm, etc. But BSPWM suits my needs and feel like Home. So, I Choose BSPWM.\nFor Bar I used Polybar but then I tried tint2 and I switched to it, No specific reason.\nBrowser I use is Chromium and Firefox\nGUI Editor Emacs And Because of its extension support is easy and just works Visual Studio Code\nText Editor Neovim is the best text editor, Atleast for me it is beautiful and after adding plugin and Little bit of customisation it becomes incredible.\nGTK An open source GUI framework developed by GNOME Foundation, which I use regularly for personal apps.\nPython Telegram Bot A Python framework for developing Telegram bots, used for my bots.\nMySQL I use MySQL for DBMS but SQLite is also great.\nDocker Docker is a platform designed to help developers build, share, and run modern applications.\nHugo is the static site generator which i used for making this site. You can check source code at my GitHub.\nStuff I read is not fixed I just search for that particular topic, and then i read which suits and feels good.\nI use both GitHub and GitLab for different works. Like u can say that I use GitHub for Work and Gitlab for personal dotfiles and other stuff.\nResources Linux Journey How to Start Programming Shell Script Learn Vim JavaScript HTML Tailwind Dev Community Links I don\u0026rsquo;t have comments as I don\u0026rsquo;t want to manage them. You can however contact me at the below address if you want to.\nEmail singhvikal891@gmail.com License The contents of this site is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n=\u0026gt; Return to Homepage\n","permalink":"https://vikalsingh.pages.dev/blog/stuff-i-use/","summary":"So this is About Stuff/Resources I use.\nSystem I have 2 Laptops:\nOne is old like from 2014. Its a Lenovo IdeaPad G500 series laptop. My linux testing and Other things which I want to try. And You can say like Server stuff, storing Data are done on this laptop. I upgraded it with a 240gb SATA SSD AND it has 8GB Ram. But a Old Dual core processor which is not good for today\u0026rsquo;s world.","title":"Stuff/Resources I use"},{"content":"Introduction Hello, and welcome to my blog! I\u0026rsquo;m very excited to share my journey of creating this website using Hugo, a fast and flexible static site generator. I always wanted to write blogs as I have a passion for writing. I never knew that setting up a blog page would be this easy. Static Site Generators (SSGs) have made it easier for many people including newbies as well as professionals in their day-to-day life. In this post, I\u0026rsquo;ll tell you why I chose Hugo, how I set it up, and what I learn in the process.\nWhy Hugo? So I always wanted to have my own website, but I was intimidated by the complexity and cost of building and hosting one. There are many SSGs available like zola, ssg5 and hugo. I chose to go with hugo.\nI first started learning web development directly with the basicHTML, CSS and JS. I created and i got so much into web that I started making different pages with different content on them. I createat it and after that i started updating it then I feel that making is not important, the important is to maintain it. Then after many attempts i maintained it. But Then a guy suggest me Hugo, but it took me some time to actually start using it. Here is my first attempt at it. Hugo is a static site generator that lets you create beautiful websites from plain text files. The content is written in Markdown, a simple and easy-to-learn markup language, and Hugo converts it into HTML pages that you can upload to any web server.\nHugo has many advantages over other static site generators. It’s very fast, generating thousands of pages in seconds. It’s very flexible, allowing you to customise every aspect of your site with themes and templates. It’s very powerful, supporting features like taxonomies, menus, pagination, shortcodes, and more. And it’s very easy to use, with a simple and intuitive command-line interface.\nSetup Setting up Hugo was surprisingly easy. I followed the official documentation on the Hugo website, which was very clear and helpful. Here are the steps I took:\nI downloaded and installed Hugo on my computer using winget. I created a new site using the hugo new site command. This created a folder with some basic files and folders for my site. $ hugo new site \u0026lt;name\u0026gt; I am using the coder theme for my website. I downloaded the theme I liked and cloned it into the themes folder. $ git submodule add https://github.com/luizdepra/hugo-coder.git themes/hugo-coder I configured my site using the config.toml file in the root folder of my site. This file contained some global settings for my site, such as the title, language, base URL, etc. I also customized some theme-specific settings, such as the color scheme, fonts, layout, etc. I created some content for my site using the hugo new command. This created some Markdown files in the content folder of my site, with some predefined front matter (frontmatter) such as the title, date, categories, tags, etc. I edited these files with my favorite text editor and wrote my content. $ hugo new filename I built my site using the hugo command. This generated a public folder with all the HTML files and assets for my site. I deployed my site using the hugo deploy command. This uploaded the public folder to a web server of my choice. I used Cloudflare Pages, a free and easy-to-use hosting service that integrates well with Hugo. That\u0026rsquo;s it! My website was live and ready to be visited by anyone.\nLearnings Creating this website with Hugo was a fun and rewarding experience. I learned a lot about web development, Markdown, HTML, CSS, and more. Here are some of the things I learned:\nHow to structure and organize my content using folders and files How to format and style my content using Markdown syntax How to add images, videos, links, tables, lists, etc. to my content using Markdown or HTML How to use shortcodes to insert dynamic content or functionality into my content How to use taxonomies to categorize and tag my content How to use menus to create navigation for my site How to use partials and templates to reuse common elements across my site How to use live reloading to preview changes in real time Having set up my site now I can\u0026rsquo;t wait to post more blogs. See you there.\nLinks I don\u0026rsquo;t have comments as I don\u0026rsquo;t want to manage them. You can however contact me at the below address if you want to.\nEmail singhvikal891@gmail.com License The contents of this site is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n=\u0026gt; Return to Homepage\n","permalink":"https://vikalsingh.pages.dev/blog/why-hugo/","summary":"Introduction Hello, and welcome to my blog! I\u0026rsquo;m very excited to share my journey of creating this website using Hugo, a fast and flexible static site generator. I always wanted to write blogs as I have a passion for writing. I never knew that setting up a blog page would be this easy. Static Site Generators (SSGs) have made it easier for many people including newbies as well as professionals in their day-to-day life.","title":"Why Hugo"},{"content":"Hello, I’m VS. I’m from Madhya Pradesh, India🇮🇳\nNote: If you need a formal description, then please check out my More About Me.\nI read and write about many things like Philosophy, Political Science, Economics and Physics. I have keen intrest in these subjects and a mixture of Computer Science And Mathematics.\nThis website is personal blog which I use to document my learning journey and share my work with the world. Blog page holds a list of all posts and blogs or can use Tags to find pages about specific keywords.\nI am always looking for new opportunities to collaborate with others, and I am always eager to learn new things. If you have any questions or suggestions, please do not hesitate to get in touch with me on email\nsinghvikal891[at]gmail[dot]com .\nSome of my hobbies include photography, cycling. I also like listening to music, and reading books.\nFavorite Quotes ","permalink":"https://vikalsingh.pages.dev/about/","summary":"Hello, I’m VS. I’m from Madhya Pradesh, India🇮🇳\nNote: If you need a formal description, then please check out my More About Me.\nI read and write about many things like Philosophy, Political Science, Economics and Physics. I have keen intrest in these subjects and a mixture of Computer Science And Mathematics.\nThis website is personal blog which I use to document my learning journey and share my work with the world.","title":"About Me"},{"content":" ❝ Two roads diverged in a wood, and I— I took the one less traveled by. ❞ ~ Robert Frost\n❝ Best Practices don\u0026rsquo;t actually work. ❞\n❝ There is only one rule in this Universe is that there is no rule. ❞\n❝ The more I learn, the more I realise how much I don\u0026rsquo;t know. ❞ ~ Albert Einstein\n❝ True Independence and Freedom can only exist in doing what\u0026rsquo;s right ❞ ~ Birgham Young\n❝ If you know the system well enough, you can do things that aren\u0026rsquo;t supposed to be possibe. ❞ ~ Linus Torvalds\n❝ Arise, awake, and stop not till the goal is reached ❞ ~ Swami Vivekananda\n\u0026ldquo;Choose your wars carefully\u0026rdquo;\n\u0026ldquo;Every principle on Earth is Subjective\u0026rdquo;\n“Never get so busy making a living that you forget to make a life”\n","permalink":"https://vikalsingh.pages.dev/quote/","summary":"❝ Two roads diverged in a wood, and I— I took the one less traveled by. ❞ ~ Robert Frost\n❝ Best Practices don\u0026rsquo;t actually work. ❞\n❝ There is only one rule in this Universe is that there is no rule. ❞\n❝ The more I learn, the more I realise how much I don\u0026rsquo;t know. ❞ ~ Albert Einstein\n❝ True Independence and Freedom can only exist in doing what\u0026rsquo;s right ❞ ~ Birgham Young","title":"Favourite Quotes"},{"content":" If you are here you already know my name and other stuff.\nKey Value Name V.S. Location Madhya Pradesh, India Age 21 Email Mail Education Graduated in Computer Science Currently pursuing Masters In Physics Languages Hindi, English I’m a Linux enthusiast. I use a GNU+Linux distribution called Debian Linux. Yeah no, I’m not an arch/gentoo fanboi, I just love using the debian as it fits my needs. I also use a window manager called i3 instead of using a desktop environment(been using i3 for about 3 years now, ain’t gonna change anytime soon).\nComputer and I I started coding at grade 11 (11th standard in Indian terms). For me, I was attracted to computers by technology and computer from my childhood and during the COVID-19 lockdown when everything was completely shut off, where I developed interest towards Linux, Development, AI And Higher Mathematics.\nProgamming Languages Well these are the Skills I know, some of them very well some of them a little less.\nSkill :) Languages Bash, Java, Python,R, HTML, CSS, C, C++, LaTeX Data Storage / Handling MySQL, MongoDB OS Platforms Linux 5/6 (Debian, Fedora, Arch and family), Windows (10 and 11) Others Git and GitHub, Linux System Administration, BackEnd Development, Web Development, Object Oriented Programming Reading stuff I like books on fiction, Non-fiction, Self Help, Philosophy 🌟. I try my best to complete at least one book in 3-4 months. If you got a good book to share, don\u0026rsquo;t forget me!\nReading blogs and articles is also my way of passing time. I try to read anything that is mildly interesting. At present I am reading stuff related to like working, security.\nVoluntered At: FOSS UNITED, 1IN1B\nProjects and Works I have done Some of the stuff I’ve done lately(projects/teams/contributions):\nDeveloper of vsfetch, A fetch utility written in shell. Contributed in rxfetch, A fetch utility written in bash. Contributed in harbs, Auto Rice Bootstrapping Scripts for Arch and family to get a beautiful, full-fledged, min desktop. Contributed in hacman, Minimal Lightweight fast GUI package manager. Developer of apt-gui, Minimal Lightweight GUI Package Manager for APT, We can say Lightweight frontend for APT package manager. Developer of dnf-gui, Minimal Lightweight GUI Package Manager for Dnf, We can say Lightweight frontend for DNF package manager. Developer of link-shortner, As the name says, it a link shortner made using Django and python. RSS Want to be notified of new posts and projects? Check out RSS All cool kids use it. It is the privacy friendly, 100% user controlled way to follow your favorite website.\nContact Me Reach out to me at singhvikal891[at]gmail[dot]com if you have any questions/suggestions.\n","permalink":"https://vikalsingh.pages.dev/ir/","summary":"If you are here you already know my name and other stuff.\nKey Value Name V.S. Location Madhya Pradesh, India Age 21 Email Mail Education Graduated in Computer Science Currently pursuing Masters In Physics Languages Hindi, English I’m a Linux enthusiast. I use a GNU+Linux distribution called Debian Linux. Yeah no, I’m not an arch/gentoo fanboi, I just love using the debian as it fits my needs. I also use a window manager called i3 instead of using a desktop environment(been using i3 for about 3 years now, ain’t gonna change anytime soon).","title":"More about Me ;)"}]